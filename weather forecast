//index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecast App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <video autoplay muted loop id="backgroundVideo">
        <source src="C:/weather-app/media/default sky.mp4" type="video/mp4">
        Your browser does not support HTML5 video.
    </video>

    <div class="content">
        <div class="container">
            <h1>Weather Forecast</h1>
            <div class="search">
                <input type="text" id="city" placeholder="Enter city name">
                <button id="searchBtn">Search</button>
            </div>
            <div id="weather" style="display: none;">
                <h2 id="cityName"></h2>
                <img id="weatherIcon" alt="Weather icon" style="display: none;">
                <p id="description"></p>
                <div class="info-line">
                    <div class="info-block">
                        <p>Temperature</p>
                        <span id="temperatureValue"></span><span id="temperatureUnit"></span>
                    </div>
                    <div class="info-block">
                        <p>Humidity</p>
                        <span id="humidityValue"></span><span id="humidityUnit"></span>
                    </div>
                    <div class="info-block">
                        <p>Air Quality</p>
                        <span id="airQualityValue"></span><span id="airQualityUnit"></span>
                    </div>
                    <div class="info-block">
                        <p>Wind Speed</p>
                        <span id="windSpeedValue"></span><span id="windSpeedUnit"></span>
                    </div>
                </div>
            </div>
            <div id="forecastContainer" class="forecast-container"></div>
        </div>
    </div>
    <script src="app.js"></script>
</body>
</html>

//style.css
body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
}

#backgroundVideo {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1;
}

.content {
    position: relative;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    text-align: center;
    color: white;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
}

.container {
    background-color: rgba(0, 0, 0, 0.397);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.382);
}

.search {
    margin-bottom: 20px;
}

input[type="text"] {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    width: 300px;
}

button {
    padding: 10px 20px;
    border: none;
    background-color: #007BFF;
    color: white;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

#weather {
    margin-top: 20px;
}

#description {
    font-size: 1.3em;
}

.info-line {
    display: flex;
    justify-content: space-around;
    margin-top: 10px;
    font-size: 0.8em;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.info-block {
    text-align: center;
    margin-right: 20px; /* Add margin to create space between blocks */
}

.info-block p {
    font-size: 1.5em;
    margin: 0;
}

.info-block span {
    display: inline-block;
    font-size: 2em;
    margin-top: 5px;
}

.forecast-container {
    margin-top: 20px;
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
}

.forecast-day {
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    padding: 10px;
    margin: 5px;
    width: 120px;
    text-align: center;
}
//app.js
document.getElementById('searchBtn').addEventListener('click', () => {
    const city = document.getElementById('city').value;
    if (city === '') {
        alert('Please enter a city name');
        return;
    }
    getWeather(city);
});

async function getWeather(city) {
    try {
        const apiKey = 'dcb8d9f5999ef7f3858bbfaffed37d2a';
        const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);
        const weatherData = await weatherResponse.json();
        displayWeather(weatherData);
        updateBackgroundVideo(weatherData.weather[0].main);

        const forecastResponse = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);
        const forecastData = await forecastResponse.json();
        displayForecast(forecastData);

        const airQualityResponse = await fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${weatherData.coord.lat}&lon=${weatherData.coord.lon}&appid=${apiKey}`);
        const airQualityData = await airQualityResponse.json();
        displayAirQuality(airQualityData);
    } catch (error) {
        alert('City not found');
    }
}

function displayWeather(data) {
    document.getElementById('weather').style.display = 'block';
    document.getElementById('cityName').textContent = data.name;
    document.getElementById('description').textContent = data.weather[0].description;

    document.getElementById('temperatureValue').textContent = data.main.temp;
    document.getElementById('temperatureUnit').textContent = '°C';
    document.getElementById('humidityValue').textContent = data.main.humidity;
    document.getElementById('humidityUnit').textContent = '%';
    document.getElementById('windSpeedValue').textContent = data.wind.speed;
    document.getElementById('windSpeedUnit').textContent = 'm/s';
}

function displayAirQuality(data) {
    const airQualityIndex = data.list[0].main.aqi;
    let airQualityDescription = '';

    switch (airQualityIndex) {
        case 1:
            airQualityDescription = 'Good';
            break;
        case 2:
            airQualityDescription = 'Fair';
            break;
        case 3:
            airQualityDescription = 'Moderate';
            break;
        case 4:
            airQualityDescription = 'Poor';
            break;
        case 5:
            airQualityDescription = 'Very Poor';
            break;
        default:
            airQualityDescription = 'Unknown';
            break;
    }

    document.getElementById('airQualityValue').textContent = airQualityIndex;
    document.getElementById('airQualityUnit').textContent = ` (${airQualityDescription})`;
}

function displayForecast(data) {
    const forecastContainer = document.getElementById('forecastContainer');
    forecastContainer.innerHTML = '';

    /* Filter forecast data to get 5-day forecast at noon (12:00:00)*/
    const dailyData = data.list.filter(item => item.dt_txt.includes('12:00:00'));

    dailyData.forEach(day => {
        const dateObj = new Date(day.dt_txt);
        const date = `${dateObj.getDate()}/${dateObj.getMonth() + 1}/${dateObj.getFullYear()}`;
        const icon = day.weather[0].icon;
        const description = day.weather[0].description;
        const temp = day.main.temp;

        const forecastDay = document.createElement('div');
        forecastDay.className = 'forecast-day';

        forecastDay.innerHTML = `
            <p>${date}</p>
            <img src="http://openweathermap.org/img/wn/${icon}.png" alt="Weather icon">
            <p>${description}</p>
            <p>${temp} °C</p>
        `;

        forecastContainer.appendChild(forecastDay);
    });
}

function updateBackgroundVideo(weatherCondition) {
    const videoElement = document.getElementById('backgroundVideo');
    let videoSrc = '';

    switch (weatherCondition.toLowerCase()) {
        case 'clear':
        case 'sunny':
            videoSrc = 'C:/weather-app/media/sunny.mp4';
            break;
        case 'rain':
        case 'rainy':
            videoSrc = 'C:/weather-app/media/rainy.mp4';
            break;
        case 'snow':
            videoSrc = 'C:/weather-app/media/snow.mp4';
            break;
        case 'mist':
            videoSrc = 'C:/weather-app/media/mist.mp4';
            break;
        case 'clouds':
        case 'cloudy':
            videoSrc = 'C:/weather-app/media/cloudy.mp4';
            break;
        default:
            videoSrc = 'C:/weather-app/media/default sky.mp4';
            break;
    }

    videoElement.src = videoSrc;
    videoElement.load();
    videoElement.play();
}
